{"version":3,"sources":["theme/Theme.js","assets/icons/download.svg","assets/icons/add.svg","assets/icons/aeroplane-gray.svg","utils/StorageManager.js","components/modals/AddDestination.js","components/Itinerary.js","components/Map.js","utils/Utils.js","assets/icons/settings.svg","assets/logo-full-aqua.svg","assets/logo-full-sunset.svg","assets/icons/marker-maldives.svg","assets/icons/marker-california.svg","assets/icons/house.svg","components/modals/Settings.js","components/Toolbar.js","components/modals/GetStarted.js","App.js","reportWebVitals.js","index.js"],"names":["themeId","KEY_ITINERARY","KEY_THEME","KEY_HOME","getItinerary","itinerary","localStorage","getItem","JSON","parse","getHome","home","undefined","AddDestinationModal","props","useStore","theme","useState","selectedDestination","setSelectedDestination","handleSubmit","length","destination","push","setItem","stringify","addToItinerary","handleClose","Modal","centered","show","onHide","Header","closeButton","Title","className","Body","Form","Group","Label","filterBy","option","city","toLowerCase","indexOf","text","country","labelKey","onChange","id","options","Destinations","placeholder","renderMenuItemChildren","toUpperCase","Text","Footer","Button","button","variant","onClick","Itinerary","showAddModal","setShowAddModal","setItinerary","AddDestination","refreshItinerary","Navbar","bg","Brand","Nav","Link","src","DownloadIcon","width","alt","AddIcon","Row","map","item","selected","icao","Col","xs","gradient","AeroplaneGray","Map","homeMarkerIcon","Leaflet","Icon","iconUrl","homeMarker","iconSize","iconAnchor","popupAnchor","markerIcon","marker","MapContainer","center","zoom","zoomControl","TileLayer","attribution","url","currentLatLon","longitude","latitude","nextLatLon","midLatLng","latlng1","latlng2","offsetX","offsetY","r","Math","sqrt","pow","theta","atan2","r2","cos","theta2","midpointX","sin","getMidpoint","line","helpers","lngLat","curved","bezierSpline","GeoJSON","data","style","color","weight","opacity","dashArray","lineJoin","lat","lon","Marker","position","icon","Popup","themes","label","HomeMarker","MarkerCalifornia","logo","LogoSunset","primary","MarkerMaldives","LogoAqua","SettingsModal","setTheme","md","Control","as","event","newTheme","Themes","target","value","setThemeStorage","bind","defaultValue","Object","keys","key","Toolbar","showSettingsModal","setShowSettingsModal","Settings","height","SettingsIcon","GetStartedModal","setHome","selectedHome","setSelectedHome","setHomeStorage","backdrop","globalState","getTheme","withStore","showGetStarted","setShowGetStarted","GetStarted","xl","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.629bc68b.chunk.js","sourcesContent":["import LogoAqua from '../assets/logo-full-aqua.svg';\r\nimport LogoSunset from '../assets/logo-full-sunset.svg';\r\n\r\nimport MarkerMaldives from '../assets/icons/marker-maldives.svg';\r\nimport MarkerCalifornia from '../assets/icons/marker-california.svg';\r\n\r\nimport HomeMarker from '../assets/icons/house.svg';\r\n\r\nconst themes = {\r\n    'california': {\r\n        id: 'california',\r\n        label: 'California',\r\n        homeMarker: HomeMarker,\r\n        marker: MarkerCalifornia,\r\n        logo: LogoSunset,\r\n        gradient: 'gradient-california',\r\n        primary: '#FDA601',\r\n        button: 'button-california'\r\n    },\r\n    'maldives': {\r\n        id: 'maldives',\r\n        label: 'Maldives',\r\n        homeMarker: HomeMarker,\r\n        marker: MarkerMaldives,\r\n        logo: LogoAqua,\r\n        gradient: 'gradient-maldives',\r\n        primary: '#2D9CDB',\r\n        button: 'button-maldives'\r\n    }\r\n};\r\n\r\nexport const getThemeById = (themeId) => {\r\n    return themes[themeId];\r\n}\r\n\r\nexport default themes;","export default __webpack_public_path__ + \"static/media/download.b58b73d4.svg\";","export default __webpack_public_path__ + \"static/media/add.8950a2d2.svg\";","export default __webpack_public_path__ + \"static/media/aeroplane-gray.5e6bd7aa.svg\";","const KEY_ITINERARY = 'itinerary';\r\nconst KEY_THEME = 'theme';\r\nconst KEY_HOME = 'home';\r\n\r\nexport const addToItinerary = (destination) => {\r\n    const itinerary = getItinerary();\r\n    itinerary.push(destination);\r\n    localStorage.setItem(KEY_ITINERARY, JSON.stringify(itinerary));\r\n}\r\n\r\nexport const getItinerary = () => {\r\n    const itinerary = localStorage.getItem(KEY_ITINERARY);\r\n    return [...(itinerary === null ? [] : JSON.parse(localStorage.getItem(KEY_ITINERARY)))]\r\n}\r\n\r\nexport const getTheme = () => {\r\n    const theme = localStorage.getItem(KEY_THEME);\r\n    return theme ===null || theme === undefined  ? 'maldives' : theme;\r\n}\r\n\r\nexport const setTheme = (theme) => {\r\n    localStorage.setItem(KEY_THEME, theme.id);\r\n}\r\n\r\nexport const getHome = () => {\r\n    const home = localStorage.getItem(KEY_HOME);\r\n    return home === null || home === undefined ? null : JSON.parse(home);\r\n}\r\n\r\nexport const setHome = (home) => {\r\n    localStorage.setItem(KEY_HOME, JSON.stringify(home));\r\n}","import React, { useState } from 'react';\r\nimport { useStore } from 'react-context-hook';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\nimport { Typeahead } from 'react-bootstrap-typeahead';\r\nimport { addToItinerary } from '../../utils/StorageManager.js';\r\n\r\nimport Destinations from '../../data/airport_db.json';\r\n\r\nconst AddDestinationModal = (props) => {\r\n    const [theme] = useStore('theme');\r\n\r\n    const [selectedDestination, setSelectedDestination] = useState([]);\r\n\r\n    const filterDestinations = (option, props) => (\r\n        option.city.toLowerCase().indexOf(props.text.toLowerCase()) !== -1 ||\r\n        option.country.toLowerCase().indexOf(props.text.toLowerCase()) !== -1\r\n    );\r\n\r\n    const handleSubmit = () => {\r\n        if (selectedDestination.length > 0) {\r\n            addToItinerary(selectedDestination[0]);\r\n            props.handleClose(true);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Modal centered show={props.show} onHide={() => props.handleClose()}>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title className=\"headline\">ADD A DESTINATION</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <Form.Group>\r\n                    <Form.Label className=\"regular-text\"><b>WHERE?</b></Form.Label>\r\n                    <Typeahead\r\n                        filterBy={filterDestinations}\r\n                        labelKey=\"city\"\r\n                        onChange={setSelectedDestination}\r\n                        id=\"add-destination\"\r\n                        className=\"all-caps\"\r\n                        options={Destinations}\r\n                        placeholder=\"Type a destination\"\r\n                        renderMenuItemChildren={(option) => (\r\n                            <div>\r\n                                <p className=\"p-0 m-0 medium-text\"><b>{option.city.toUpperCase()}</b></p>\r\n                                <p className=\"p-0 m-0 small-text\">{option.country.toUpperCase()}</p>\r\n                            </div>\r\n                        )}\r\n                    />\r\n                    <Form.Text className=\"text-muted\">Search from {Destinations.length} destinations!</Form.Text>\r\n                </Form.Group>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button className={theme.button} variant=\"primary\" onClick={() => handleSubmit()}>\r\n                    Add\r\n                    </Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default AddDestinationModal;","import React, { useState } from 'react';\r\nimport { useStore } from 'react-context-hook';\r\n\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Nav from 'react-bootstrap/Nav';\r\n\r\nimport DownloadIcon from '../assets/icons/download.svg';\r\nimport AddIcon from '../assets/icons/add.svg';\r\nimport AeroplaneGray from '../assets/icons/aeroplane-gray.svg';\r\n\r\nimport AddDestinationModal from './modals/AddDestination';\r\n\r\nimport { getItinerary } from '../utils/StorageManager';\r\n\r\nconst Itinerary = (props) => {\r\n    const [theme] = useStore('theme');\r\n    const [showAddModal, setShowAddModal] = useState(false);\r\n    const [itinerary, setItinerary] = useStore('itinerary');\r\n\r\n    const [selectedDestination, setSelectedDestination] = useState(null)\r\n\r\n    const closeAddModal = (refreshItinerary) => {\r\n        setShowAddModal(false);\r\n        if (refreshItinerary) {\r\n            setItinerary(getItinerary());\r\n        }\r\n    }\r\n\r\n    const renderItinerary = () => {\r\n        return itinerary.map(item => {\r\n            const selected = selectedDestination?.icao === item.icao;\r\n            return <Col xs={12}\r\n                key={item.icao}\r\n                className={\"pt-2 pb-2 m-0 \" + (selected ? theme.gradient : '')}\r\n                onClick={() => { setSelectedDestination(item) }}>\r\n                <p className={\"medium-text p-0 m-0 \" + (selected ? 'text-white' : '')}><b>{item.city.toUpperCase()}</b></p>\r\n                <p className={\"small-text p-0 m-0 \" + (selected ? 'text-light' : '')}>{item.country.toUpperCase()}</p>\r\n            </Col>\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"fit-container flex-container\">\r\n            <AddDestinationModal show={showAddModal} handleClose={closeAddModal} />\r\n\r\n            <Navbar bg=\"transparent\" variant=\"light\" className=\"p-3 m-0\">\r\n                <Navbar.Brand>\r\n                    <div>\r\n                        <p className=\"headline p-0 m-0\">ITINERARY</p>\r\n                        <p className=\"small-text p-0 m-0\">{itinerary.length} DESTINATIONS</p>\r\n                    </div>\r\n                </Navbar.Brand>\r\n                <Nav className=\"ml-auto\">\r\n                    <Nav.Link><img src={DownloadIcon} width=\"20px\" alt=\"\" /></Nav.Link>\r\n                    <Nav.Link onClick={() => setShowAddModal(true)}><img alt=\"\" src={AddIcon} width=\"20px\" /></Nav.Link>\r\n                </Nav>\r\n            </Navbar>\r\n            <hr className=\"p-0 m-0\" />\r\n            <Row className=\"fit-width fill-remaining-height vertical-scroll pt-2 pb-2 m-0\">\r\n                {\r\n                    itinerary.length > 0\r\n                        ? <div className=\"fit-width\">\r\n                            {renderItinerary()}\r\n                        </div>\r\n                        : <div className=\"text-center p-5\">\r\n                            <img src={AeroplaneGray} width=\"30%\" />\r\n                            <p className=\"p-0 m-0 mt-4 small-text all-caps\">Add some destinations to begin. Your destinations are stored locally and will be deleted if browser data is cleared.</p>\r\n                        </div>\r\n                }\r\n            </Row>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Itinerary;","import React from 'react';\r\nimport { useStore } from 'react-context-hook';\r\n\r\nimport { MapContainer, TileLayer, Marker, Popup, GeoJSON } from 'react-leaflet'\r\nimport Leaflet from 'leaflet'\r\n\r\nimport * as helpers from '@turf/helpers';\r\nimport { default as bezierSpline } from '@turf/bezier-spline';\r\n\r\nimport { getMidpoint } from '../utils/Utils';\r\n\r\n\r\nconst Map = (props) => {\r\n    const [itinerary] = useStore('itinerary');\r\n    const [theme] = useStore('theme');\r\n    const [home] = useStore('home');\r\n\r\n    const homeMarkerIcon = new Leaflet.Icon({\r\n        iconUrl: theme.homeMarker,\r\n        iconSize: [20, 20], // size of the icon\r\n        iconAnchor: [10, 10], // point of the icon which will correspond to marker's location\r\n        popupAnchor: [0, -10]// point from which the popup should open relative to the iconAnchor\r\n    });\r\n\r\n    const homeMarker = () => {\r\n        if (home !== null && home !== undefined) {\r\n            return <Marker position={[home.latitude, home.longitude]} icon={homeMarkerIcon}>\r\n                <Popup>\r\n                    <p className=\"p-0 m-0 regular-text poppins\"><b>HOME</b></p>\r\n                </Popup>\r\n            </Marker>\r\n        }\r\n    }\r\n\r\n    const markerIcon = new Leaflet.Icon({\r\n        iconUrl: theme.marker,\r\n        iconSize: [15, 15], // size of the icon\r\n        iconAnchor: [7.5, 7.5], // point of the icon which will correspond to marker's location\r\n        popupAnchor: [0, -7.5]// point from which the popup should open relative to the iconAnchor\r\n    })\r\n\r\n    const markDestinations = () => {\r\n        return itinerary.map(item => {\r\n            const lat = item.latitude;\r\n            const lon = item.longitude;\r\n            return <Marker position={[lat, lon]} key={item.icao} icon={markerIcon}>\r\n                <Popup>\r\n                    <div>\r\n                        <p className=\"p-0 m-0 regular-text poppins\"><b>{item.city.toUpperCase()}</b></p>\r\n                        <p className=\"p-0 m-0 small-text poppins\">{item.country.toUpperCase()}</p>\r\n                    </div>\r\n                </Popup>\r\n            </Marker>\r\n        })\r\n    }\r\n\r\n    const drawAirplanePaths = () => {\r\n        return itinerary.map(item => {\r\n            const currentLatLon = [item.longitude, item.latitude];\r\n            const nextLatLon = [home.longitude, home.latitude];\r\n            const midLatLng = getMidpoint(currentLatLon, nextLatLon);\r\n\r\n            const line = helpers.lineString(\r\n                [\r\n                    currentLatLon,\r\n                    midLatLng,\r\n                    nextLatLon,\r\n                ].map(lngLat => [lngLat[0], lngLat[1]])\r\n            );\r\n\r\n            const curved = bezierSpline(line);\r\n\r\n            const lineStyle = {\r\n                color: '#9a9a9a',\r\n                weight: 2,\r\n                opacity: .7,\r\n                dashArray: '5,5',\r\n                lineJoin: 'round'\r\n            }\r\n\r\n            return <GeoJSON data={curved} style={lineStyle} />\r\n        })\r\n    }\r\n\r\n    return (\r\n        <MapContainer\r\n            className={props.className}\r\n            center={[0, 0]}\r\n            zoom={2}\r\n            zoomControl={false}>\r\n            <TileLayer\r\n                attribution='Map data &copy; <a href=\"https://www.openstreetmap.org/\">OpenStreetMap</a> contributors, <a href=\"https://creativecommons.org/licenses/by-sa/2.0/\">CC-BY-SA</a>'\r\n                url=\"https://{s}.basemaps.cartocdn.com/rastertiles/light_all/{z}/{x}/{y}.png\" />\r\n            {drawAirplanePaths()}\r\n            {markDestinations()}\r\n            {homeMarker()}\r\n        </MapContainer>\r\n    )\r\n};\r\n\r\nexport default Map;","const deg2rad = (deg) => {\r\n    return deg * (Math.PI / 180)\r\n}\r\n\r\nexport const getDistanceFromLatLonInKm = (lat1, lon1, lat2, lon2) => {\r\n    var R = 6371; // Radius of the earth in km\r\n    var dLat = deg2rad(lat2 - lat1);  // deg2rad below\r\n    var dLon = deg2rad(lon2 - lon1);\r\n    var a =\r\n        Math.sin(dLat / 2) * Math.sin(dLat / 2) +\r\n        Math.cos(deg2rad(lat1)) * Math.cos(deg2rad(lat2)) *\r\n        Math.sin(dLon / 2) * Math.sin(dLon / 2)\r\n        ;\r\n    var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\r\n    var d = R * c; // Distance in km\r\n    return d;\r\n}\r\n\r\nexport const getMidpoint = (latlng1, latlng2) => {\r\n    const offsetX = latlng2[1] - latlng1[1]\r\n    const offsetY = latlng2[0] - latlng1[0];\r\n\r\n    const r = Math.sqrt(Math.pow(offsetX, 2) + Math.pow(offsetY, 2))\r\n    const theta = Math.atan2(offsetY, offsetX);\r\n\r\n    const thetaOffset = (3.14 / 10);\r\n\r\n    const r2 = (r / 2) / (Math.cos(thetaOffset)),\r\n        theta2 = theta + thetaOffset;\r\n\r\n    const midpointX = (r2 * Math.cos(theta2)) + latlng1[1];\r\n    const midpointY = (r2 * Math.sin(theta2)) + latlng1[0];\r\n\r\n    return [midpointY, midpointX];\r\n}","export default __webpack_public_path__ + \"static/media/settings.371a91de.svg\";","export default __webpack_public_path__ + \"static/media/logo-full-aqua.c7bfa860.svg\";","export default __webpack_public_path__ + \"static/media/logo-full-sunset.c614165c.svg\";","export default __webpack_public_path__ + \"static/media/marker-maldives.bde5d980.svg\";","export default __webpack_public_path__ + \"static/media/marker-california.62e460ee.svg\";","export default __webpack_public_path__ + \"static/media/house.1618b123.svg\";","import React from 'react';\r\nimport { useStore } from 'react-context-hook';\r\n\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Form from 'react-bootstrap/Form';\r\n\r\nimport { setTheme as setThemeStorage } from '../../utils/StorageManager';\r\nimport Themes from '../../theme/Theme';\r\n\r\nconst SettingsModal = (props) => {\r\n    const [theme, setTheme] = useStore('theme');\r\n\r\n    const handleThemeChange = (event) => {\r\n        const newTheme = Themes[event.target.value];\r\n        setTheme(newTheme);\r\n        setThemeStorage(newTheme);\r\n    }\r\n\r\n    const getThemeOptions = () => {\r\n        return Object.keys(Themes).map(key => {\r\n            const item = Themes[key];\r\n            return <option key={item.id} value={item.id} className=\"regular-text\">\r\n                {item.label}\r\n            </option>\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Modal centered show={props.show} onHide={() => props.handleClose()}>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title className=\"headline\">SETTINGS</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <Row>\r\n                    <Col xs={12} md={6}>\r\n                        <p className=\"p-0 m-0 medium-text\"><b>THEME</b></p>\r\n                        <p className=\"p-0 m-0 small-text\">Currently set to {theme.label}</p>\r\n                    </Col>\r\n                    <Col xs={12} md={6}>\r\n                        <Form.Group>\r\n                            <Form.Control\r\n                                as=\"select\"\r\n                                className=\"regular-text\"\r\n                                onChange={handleThemeChange.bind(this)}\r\n                                defaultValue={theme.id}>\r\n                                {getThemeOptions()}\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n\r\n                    </Col>\r\n                </Row>\r\n            </Modal.Body>\r\n        </Modal>\r\n    )\r\n};\r\n\r\nexport default SettingsModal;","import React, { useState } from 'react';\r\nimport { useStore } from 'react-context-hook';\r\n\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport SettingsIcon from '../assets/icons/settings.svg';\r\nimport SettingsModal from './modals/Settings';\r\n\r\nconst Toolbar = (props) => {\r\n    const [showSettingsModal, setShowSettingsModal] = useState(false);\r\n    const [theme] = useStore('theme');\r\n\r\n    return (\r\n        <div>\r\n            <SettingsModal\r\n                show={showSettingsModal}\r\n                handleClose={() => setShowSettingsModal(false)} />\r\n\r\n            <Navbar bg=\"transparent\" variant=\"light\" className=\"p-3 m-0 fade-top\">\r\n                <Navbar.Brand>\r\n                    <img\r\n                        alt=\"\"\r\n                        src={theme.logo}\r\n                        height=\"45\"\r\n                        className=\"d-inline-block align-top\"\r\n                    />\r\n                </Navbar.Brand>\r\n                <Nav className=\"ml-auto\">\r\n                    <Nav.Link onClick={() => setShowSettingsModal(true)}><img alt=\"\" src={SettingsIcon} width=\"20px\" /></Nav.Link>\r\n                </Nav>\r\n            </Navbar>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Toolbar;","import React, { useState } from 'react';\r\nimport { useStore } from 'react-context-hook';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\nimport { Typeahead } from 'react-bootstrap-typeahead';\r\nimport { setHome as setHomeStorage } from '../../utils/StorageManager.js';\r\n\r\nimport Destinations from '../../data/airport_db.json';\r\n\r\nconst GetStartedModal = (props) => {\r\n    const [theme] = useStore('theme');\r\n    const [home, setHome] = useStore('home');\r\n\r\n    const [selectedHome, setSelectedHome] = useState([]);\r\n\r\n    const filterDestinations = (option, props) => (\r\n        option.city.toLowerCase().indexOf(props.text.toLowerCase()) !== -1 ||\r\n        option.country.toLowerCase().indexOf(props.text.toLowerCase()) !== -1\r\n    );\r\n\r\n    const handleSubmit = () => {\r\n        if (selectedHome.length > 0) {\r\n            setHome(selectedHome[0])\r\n            setHomeStorage(selectedHome[0]);\r\n            props.handleClose();    \r\n        }\r\n    }\r\n\r\n    return (\r\n        <Modal centered backdrop=\"static\" show={props.show} onHide={() => props.handleClose()}>\r\n            <Modal.Body className=\"text-center m-4\">\r\n                <img src={theme.logo} width=\"180px\" alt=\"\" />\r\n                <p className=\"p-0 m-0 medium-text\">WELCOME TRAVELER! LET'S GET STARTED.</p>\r\n                <Form.Group>\r\n                    <Form.Label className=\"regular-text mt-5 mb-3\">WHERE'S HOME?</Form.Label>\r\n                    <Typeahead\r\n                        filterBy={filterDestinations}\r\n                        labelKey=\"city\"\r\n                        onChange={setSelectedHome}\r\n                        id=\"set-home\"\r\n                        className=\"mb-3\"\r\n                        options={Destinations}\r\n                        placeholder=\"Type a city\"\r\n                        renderMenuItemChildren={(option) => (\r\n                            <div>\r\n                                <p className=\"p-0 m-0 medium-text\"><b>{option.city.toUpperCase()}</b></p>\r\n                                <p className=\"p-0 m-0 small-text\">{option.country.toUpperCase()}</p>\r\n                            </div>\r\n                        )}\r\n                    />\r\n                    <Form.Text className=\"text-muted all-caps mb-5\"><small>You can always change this later.<br/>If your location is not on the list, select the nearest city.</small></Form.Text>\r\n                </Form.Group>\r\n\r\n                <Button className={theme.button} variant=\"primary\" onClick={() => handleSubmit()}>\r\n                        Begin</Button>\r\n            </Modal.Body>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default GetStartedModal;","import { useEffect, useState } from 'react';\nimport { withStore } from 'react-context-hook';\n\nimport { Row, Col } from 'react-bootstrap';\nimport './App.css';\nimport Itinerary from './components/Itinerary';\nimport Map from './components/Map';\nimport Toolbar from './components/Toolbar';\n\nimport { getItinerary, getTheme, getHome } from './utils/StorageManager';\nimport { getThemeById } from './theme/Theme';\nimport GetStartedModal from './components/modals/GetStarted';\n\nconst App = () => {\n\n  const [showGetStarted, setShowGetStarted] = useState(getHome() === null || getHome() === undefined);\n\n  const handleGetStartedClose = () => {\n    setShowGetStarted(false)\n  }\n\n  return (\n    <div className=\"App\">\n      <GetStartedModal show={showGetStarted} handleClose={handleGetStartedClose} />\n      <Row className=\"m-0 p-0 fit-viewport-width fit-viewport-height\">\n        <Col className=\"m-0 p-0 fit-viewport-height\" xs={12} md={8} xl={9}>\n          <div className=\"fit-viewport-height relative-container\">\n            <Map className=\"fit-container absolute-top z-base\" />\n            <Toolbar className=\"fit-width absolute-top z-top fade-top\" />\n            <p className=\"p-3 m-0 small-text all-caps absolute-bottom z-top\"><small>Paths do not depict actual flight routes.</small></p>\n          </div>\n        </Col>\n        <Col className=\"m-0 p-0 fit-viewport-height\" xs={12} md={4} xl={3}>\n          <Itinerary className=\"fit-container\" />\n        </Col>\n      </Row>\n    </div>\n  );\n}\n\nconst globalState = { theme: getThemeById(getTheme()), itinerary: getItinerary(), home: getHome()};\nexport default withStore(App, globalState);","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}