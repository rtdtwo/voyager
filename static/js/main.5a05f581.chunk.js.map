{"version":3,"sources":["theme/Theme.js","assets/icons/add.svg","assets/icons/close.svg","assets/icons/aeroplane-gray.svg","components/Itinerary.js","utils/Utils.js","components/Map.js","assets/icons/settings.svg","assets/icons/info.svg","assets/icons/hamburger.svg","components/Toolbar.js","utils/StorageManager.js","components/modals/GetStarted.js","assets/logo-full-aqua.svg","assets/logo-full-sunset.svg","assets/icons/marker-maldives.svg","assets/icons/marker-california.svg","assets/icons/house.svg","components/modals/AddDestination.js","components/modals/Settings.js","components/modals/About.js","App.js","reportWebVitals.js","index.js"],"names":["themeId","Itinerary","props","useStore","theme","itinerary","selectedDestination","setSelectedDestination","className","w","templateColumns","gap","colSpan","p","length","drawer","alt","src","CloseIcon","ml","h","mt","mb","mr","onClick","closeDrawer","AddIcon","showAddModal","spacing","align","map","item","selected","icao","pt","pb","pl","pr","gradient","city","country","AeroplaneGray","width","availableWidth","window","screen","availWidth","isMobile","availHeight","leafletMap","Map","home","homeMarkerIcon","Leaflet","Icon","iconUrl","homeMarker","iconSize","iconAnchor","popupAnchor","markerIcon","marker","southWest","latLng","northEast","bounds","latLngBounds","centerPoint","latitude","longitude","zoom","setView","MapContainer","center","maxBounds","whenCreated","minZoom","zoomControl","TileLayer","attribution","url","currentLatLon","nextLatLon","midLatLng","latlng1","latlng2","offsetX","offsetY","r","Math","sqrt","pow","theta","atan2","r2","cos","theta2","midpointX","sin","getMidpoint","line","helpers","lngLat","curved","bezierSpline","GeoJSON","data","style","color","weight","opacity","dashArray","lineJoin","lat","lon","Marker","position","icon","Popup","undefined","Toolbar","logo","margin","floatDirection","menu","SettingsIcon","showSettingsModal","InfoIcon","showAboutModal","mobileMenu","HamburgerIcon","drawerOpen","getMenuItems","KEY_ITINERARY","KEY_THEME","KEY_HOME","getItinerary","localStorage","getItem","JSON","parse","getHome","GetStartedModal","setHome","useState","selectedHome","setSelectedHome","searchOptions","setSearchOptions","handleSubmit","setItem","stringify","setHomeStorage","handleClose","isOpen","show","onClose","defaultValue","placeholder","type","onChange","event","searchTerm","target","value","toLowerCase","Destinations","filter","includes","bind","divider","borderColor","handleOptionSelect","button","themes","id","label","HomeMarker","MarkerCalifornia","LogoSunset","primary","MarkerMaldives","LogoAqua","AddDestinationModal","setItinerary","selectedPlace","setSelectedPlace","destination","push","addToItinerary","m","SettingsModal","setTheme","newTheme","Themes","setThemeStorage","Object","keys","key","AboutModal","title","href","rel","globalState","getTheme","withStore","openDrawer","setOpenDrawer","showGetStarted","setShowGetStarted","setShowAddModal","setShowSettingsModal","setShowAboutModal","GetStarted","AddDestination","Settings","About","base","sm","md","lg","placement","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5a05f581.chunk.js","sourcesContent":["import LogoAqua from '../assets/logo-full-aqua.svg';\r\nimport LogoSunset from '../assets/logo-full-sunset.svg';\r\n\r\nimport MarkerMaldives from '../assets/icons/marker-maldives.svg';\r\nimport MarkerCalifornia from '../assets/icons/marker-california.svg';\r\n\r\nimport HomeMarker from '../assets/icons/house.svg';\r\n\r\nconst themes = {\r\n    'california': {\r\n        id: 'california',\r\n        label: 'California',\r\n        homeMarker: HomeMarker,\r\n        marker: MarkerCalifornia,\r\n        logo: LogoSunset,\r\n        gradient: 'gradient-california',\r\n        primary: '#FDA601',\r\n        button: 'button-california'\r\n    },\r\n    'maldives': {\r\n        id: 'maldives',\r\n        label: 'Maldives',\r\n        homeMarker: HomeMarker,\r\n        marker: MarkerMaldives,\r\n        logo: LogoAqua,\r\n        gradient: 'gradient-maldives',\r\n        primary: '#2D9CDB',\r\n        button: 'button-maldives'\r\n    }\r\n};\r\n\r\nexport const getThemeById = (themeId) => {\r\n    return themes[themeId];\r\n}\r\n\r\nexport default themes;","export default __webpack_public_path__ + \"static/media/add.8950a2d2.svg\";","export default __webpack_public_path__ + \"static/media/close.a94db416.svg\";","export default __webpack_public_path__ + \"static/media/aeroplane-gray.5e6bd7aa.svg\";","import React from 'react';\r\nimport { useStore } from 'react-context-hook';\r\n\r\nimport AddIcon from '../assets/icons/add.svg';\r\nimport CloseIcon from '../assets/icons/close.svg';\r\nimport AeroplaneGray from '../assets/icons/aeroplane-gray.svg';\r\nimport { Box, VStack, Grid, GridItem } from '@chakra-ui/layout';\r\nimport { Image } from '@chakra-ui/react';\r\n\r\nconst Itinerary = (props) => {\r\n    const [theme] = useStore('theme');\r\n    const [itinerary] = useStore('itinerary');\r\n    const [selectedDestination, setSelectedDestination] = useStore('selectedDestination');\r\n\r\n    const renderItinerary = () => {\r\n        return itinerary.map(item => {\r\n            const selected = selectedDestination?.icao === item.icao;\r\n            return <Box\r\n                key={item.icao}\r\n                pt={2} pb={2} pl={4} pr={4}\r\n                className={selected ? theme.gradient : ''}\r\n                onClick={() => {\r\n                    if (props.drawer) {\r\n                        props.closeDrawer(false);\r\n                    }\r\n                    setSelectedDestination(item);\r\n                }}>\r\n                <p className={\"medium-text all-caps \" + (selected ? \"text-color-white\" : \"\")}><b>{item.city}</b></p>\r\n                <p className={\"small-text all-caps \" + (selected ? \"text-color-white\" : \"\")}>{item.country}</p>\r\n            </Box>\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"bg-white fit-container flex-container\">\r\n            <Grid\r\n                w=\"100%\"\r\n                templateColumns=\"repeat(12, 1fr)\"\r\n                gap={0}>\r\n                <GridItem colSpan={10} p={4}>\r\n                    <div>\r\n                        <p className=\"headline\">ITINERARY</p>\r\n                        <p className=\"small-text\">{itinerary.length} DESTINATIONS</p>\r\n                    </div>\r\n                </GridItem>\r\n                <GridItem colSpan={2}>\r\n                    {props.drawer\r\n                        ? <Image alt=\"\" src={CloseIcon} ml=\"auto\" h=\"16px\" mt=\"28px\" mb=\"28px\" mr=\"16px\" onClick={() => props.closeDrawer(false)} />\r\n                        : <Image alt=\"\" src={AddIcon} ml=\"auto\" h=\"20px\" mt=\"26px\" mb=\"26px\" mr=\"16px\" onClick={() => props.showAddModal(true)} />\r\n                    }\r\n                </GridItem>\r\n            </Grid>\r\n            <hr />\r\n            <div className=\"fit-width fill-remaining-height vertical-scroll\">\r\n                {\r\n                    itinerary.length > 0 ?\r\n                        <VStack\r\n                            spacing={0}\r\n                            align=\"stretch\">\r\n                            {renderItinerary()}\r\n                        </VStack>\r\n                        : <div className=\"text-align-center\">\r\n                            <br />\r\n                            <img src={AeroplaneGray} width=\"30%\" alt=\"\" className=\"center-using-margin\" />\r\n                            <p className=\"small-text all-caps\">\r\n                                <br />Add some destinations to begin. Your destinations are stored locally and will be deleted if browser data is cleared.</p>\r\n                        </div>\r\n                }\r\n            </div >\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Itinerary;","const deg2rad = (deg) => {\r\n    return deg * (Math.PI / 180)\r\n}\r\n\r\nexport const getDistanceFromLatLonInKm = (lat1, lon1, lat2, lon2) => {\r\n    var R = 6371; // Radius of the earth in km\r\n    var dLat = deg2rad(lat2 - lat1);  // deg2rad below\r\n    var dLon = deg2rad(lon2 - lon1);\r\n    var a =\r\n        Math.sin(dLat / 2) * Math.sin(dLat / 2) +\r\n        Math.cos(deg2rad(lat1)) * Math.cos(deg2rad(lat2)) *\r\n        Math.sin(dLon / 2) * Math.sin(dLon / 2)\r\n        ;\r\n    var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\r\n    var d = R * c; // Distance in km\r\n    return d;\r\n}\r\n\r\nexport const getMidpoint = (latlng1, latlng2) => {\r\n    const offsetX = latlng2[1] - latlng1[1]\r\n    const offsetY = latlng2[0] - latlng1[0];\r\n\r\n    const r = Math.sqrt(Math.pow(offsetX, 2) + Math.pow(offsetY, 2))\r\n    const theta = Math.atan2(offsetY, offsetX);\r\n\r\n    const thetaOffset = (3.14 / 10);\r\n\r\n    const r2 = (r / 2) / (Math.cos(thetaOffset)),\r\n        theta2 = theta + thetaOffset;\r\n\r\n    const midpointX = (r2 * Math.cos(theta2)) + latlng1[1];\r\n    const midpointY = (r2 * Math.sin(theta2)) + latlng1[0];\r\n\r\n    return [midpointY, midpointX];\r\n}\r\n\r\nexport const availableWidth = window.screen.availWidth;\r\n\r\nexport const availableHeight = window.screen.availHeight;\r\n\r\nexport const isMobile = availableWidth < 768;\r\n","import React from 'react';\r\nimport { useStore } from 'react-context-hook';\r\n\r\nimport { MapContainer, TileLayer, Marker, Popup, GeoJSON } from 'react-leaflet'\r\nimport Leaflet from 'leaflet'\r\n\r\nimport * as helpers from '@turf/helpers';\r\nimport { default as bezierSpline } from '@turf/bezier-spline';\r\n\r\nimport { getMidpoint } from '../utils/Utils';\r\n\r\nlet leafletMap = null;\r\n\r\nconst Map = (props) => {\r\n    const [itinerary] = useStore('itinerary');\r\n    const [theme] = useStore('theme');\r\n    const [home] = useStore('home');\r\n    const [selectedDestination] = useStore('selectedDestination');\r\n\r\n    const homeMarkerIcon = new Leaflet.Icon({\r\n        iconUrl: theme.homeMarker,\r\n        iconSize: [20, 20], // size of the icon\r\n        iconAnchor: [10, 10], // point of the icon which will correspond to marker's location\r\n        popupAnchor: [0, -10]// point from which the popup should open relative to the iconAnchor\r\n    });\r\n\r\n    const homeMarker = () => {\r\n        if (home !== null && home !== undefined) {\r\n            return <Marker position={[home.latitude, home.longitude]} icon={homeMarkerIcon}>\r\n                <Popup>\r\n                    <p className=\"regular-text poppins\"><b>HOME</b></p>\r\n                </Popup>\r\n            </Marker>\r\n        }\r\n    }\r\n\r\n    const markerIcon = new Leaflet.Icon({\r\n        iconUrl: theme.marker,\r\n        iconSize: [15, 15], // size of the icon\r\n        iconAnchor: [7.5, 7.5], // point of the icon which will correspond to marker's location\r\n        popupAnchor: [0, -7.5]// point from which the popup should open relative to the iconAnchor\r\n    })\r\n\r\n    const markDestinations = () => {\r\n        return itinerary.map(item => {\r\n            const lat = item.latitude;\r\n            const lon = item.longitude;\r\n            return <Marker position={[lat, lon]} key={item.icao} icon={markerIcon}>\r\n                <Popup>\r\n                    <p className=\"regular-text poppins all-caps no-padding no-margin\"><b>{item.city}</b></p>\r\n                    <p className=\"small-text poppins all-caps no-padding no-margin\">{item.country}</p>\r\n                </Popup>\r\n            </Marker>\r\n        })\r\n    }\r\n\r\n    const drawAirplanePaths = () => {\r\n        return itinerary.map(item => {\r\n            const currentLatLon = [item.longitude, item.latitude];\r\n            const nextLatLon = [home.longitude, home.latitude];\r\n            const midLatLng = getMidpoint(currentLatLon, nextLatLon);\r\n\r\n            const line = helpers.lineString(\r\n                [\r\n                    currentLatLon,\r\n                    midLatLng,\r\n                    nextLatLon,\r\n                ].map(lngLat => [lngLat[0], lngLat[1]])\r\n            );\r\n\r\n            const curved = bezierSpline(line);\r\n\r\n            const lineStyle = {\r\n                color: '#9a9a9a',\r\n                weight: 2,\r\n                opacity: .7,\r\n                dashArray: '5,5',\r\n                lineJoin: 'round'\r\n            }\r\n\r\n            return <GeoJSON data={curved} style={lineStyle} key={currentLatLon} />\r\n        })\r\n    }\r\n\r\n    const southWest = Leaflet.latLng(-90, -180);\r\n    const northEast = Leaflet.latLng(90, 180);\r\n    const bounds = Leaflet.latLngBounds(southWest, northEast);\r\n\r\n    const centerPoint = selectedDestination !== null ? [selectedDestination.latitude, selectedDestination.longitude] : [0, 0]\r\n    const zoom = selectedDestination !== null ? 4 : 2;\r\n    leafletMap?.setView(centerPoint, zoom);\r\n\r\n    return (\r\n        <MapContainer\r\n            className={props.className}\r\n            center={[0, 0]}\r\n            maxBounds={bounds}\r\n            whenCreated={map => { leafletMap = map }}\r\n            zoom={2}\r\n            minZoom={2}\r\n            zoomControl={false}>\r\n            <TileLayer\r\n                attribution='Map data &copy; <a href=\"https://www.openstreetmap.org/\">OpenStreetMap</a> contributors, <a href=\"https://creativecommons.org/licenses/by-sa/2.0/\">CC-BY-SA</a>'\r\n                url=\"https://{s}.basemaps.cartocdn.com/rastertiles/light_all/{z}/{x}/{y}.png\" />\r\n            {drawAirplanePaths()}\r\n            {markDestinations()}\r\n            {homeMarker()}\r\n        </MapContainer>\r\n    )\r\n};\r\n\r\nexport default Map;","export default __webpack_public_path__ + \"static/media/settings.371a91de.svg\";","export default __webpack_public_path__ + \"static/media/info.ebdab705.svg\";","export default __webpack_public_path__ + \"static/media/hamburger.5d132b54.svg\";","import React from 'react';\r\nimport { useStore } from 'react-context-hook';\r\n\r\nimport { Box, Grid, GridItem } from '@chakra-ui/layout';\r\nimport { Image } from \"@chakra-ui/react\"\r\n\r\nimport SettingsIcon from '../assets/icons/settings.svg';\r\nimport InfoIcon from '../assets/icons/info.svg';\r\nimport HamburgerIcon from '../assets/icons/hamburger.svg';\r\nimport AddIcon from '../assets/icons/add.svg';\r\n\r\nimport { isMobile } from '../utils/Utils';\r\n\r\n\r\nconst Toolbar = (props) => {\r\n    const [theme] = useStore('theme');\r\n\r\n    const getMenuItems = () => {\r\n        const floatDirection = isMobile ? \"float-top\" : \"float-right\";\r\n\r\n        const menu = [\r\n            <Image key=\"settings\" className={floatDirection} alt=\"\" ml={4} mb={4} src={SettingsIcon} h=\"20px\" onClick={() => props.showSettingsModal(true)} />,\r\n            <Image key=\"about\" className={floatDirection} alt=\"\" ml={4} mb={4} src={InfoIcon} h=\"20px\" onClick={() => props.showAboutModal(true)} />\r\n        ]\r\n\r\n        const mobileMenu = [\r\n            <Image key=\"menu\" alt=\"\" className={floatDirection} ml={4} mb={4} src={HamburgerIcon} h=\"20px\" onClick={() => props.drawerOpen(true)} />,\r\n            <Image key=\"add\" alt=\"\" className={floatDirection} ml={4} mb={4} src={AddIcon} h=\"20px\" onClick={() => props.showAddModal(true)} />,\r\n            ...menu,\r\n        ]\r\n\r\n        return <Box className=\"fit-height float-right\" mt={6} mr={4}>\r\n            {isMobile ? mobileMenu : menu}\r\n        </Box>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Grid\r\n                className={props.className}\r\n                w=\"100%\"\r\n                templateColumns=\"repeat(12, 1fr)\"\r\n                gap={0}>\r\n                <GridItem colSpan={6}>\r\n                    <Image src={theme.logo} alt=\"\" h=\"40px\" margin=\"16px\" />\r\n                </GridItem>\r\n                <GridItem colSpan={6}>\r\n                    {getMenuItems()}\r\n                </GridItem>\r\n            </Grid>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Toolbar;","const KEY_ITINERARY = 'itinerary';\r\nconst KEY_THEME = 'theme';\r\nconst KEY_HOME = 'home';\r\n\r\nexport const addToItinerary = (destination) => {\r\n    const itinerary = getItinerary();\r\n    itinerary.push(destination);\r\n    localStorage.setItem(KEY_ITINERARY, JSON.stringify(itinerary));\r\n}\r\n\r\nexport const getItinerary = () => {\r\n    const itinerary = localStorage.getItem(KEY_ITINERARY);\r\n    return [...(itinerary === null ? [] : JSON.parse(localStorage.getItem(KEY_ITINERARY)))]\r\n}\r\n\r\nexport const getTheme = () => {\r\n    const theme = localStorage.getItem(KEY_THEME);\r\n    return theme ===null || theme === undefined  ? 'maldives' : theme;\r\n}\r\n\r\nexport const setTheme = (theme) => {\r\n    localStorage.setItem(KEY_THEME, theme.id);\r\n}\r\n\r\nexport const getHome = () => {\r\n    const home = localStorage.getItem(KEY_HOME);\r\n    return home === null || home === undefined ? null : JSON.parse(home);\r\n}\r\n\r\nexport const setHome = (home) => {\r\n    localStorage.setItem(KEY_HOME, JSON.stringify(home));\r\n}","import React, { useState } from 'react';\r\nimport { useStore } from 'react-context-hook';\r\nimport { setHome as setHomeStorage } from '../../utils/StorageManager.js';\r\n\r\nimport {\r\n    Modal,\r\n    ModalOverlay,\r\n    ModalContent,\r\n    Input,\r\n    Image,\r\n    VStack,\r\n    StackDivider,\r\n    Box,\r\n    Button\r\n} from \"@chakra-ui/react\"\r\n\r\nimport Destinations from '../../data/airport_db.json';\r\n\r\nconst GetStartedModal = (props) => {\r\n    const [theme] = useStore('theme');\r\n    const [home, setHome] = useStore('home');\r\n    const [selectedHome, setSelectedHome] = useState(null);\r\n    const [searchOptions, setSearchOptions] = useState([]);\r\n\r\n    const handleSubmit = () => {\r\n        if (selectedHome !== null) {\r\n            setHome(selectedHome);\r\n            setHomeStorage(selectedHome);\r\n            props.handleClose();\r\n        }\r\n    }\r\n\r\n    const handleOptionSelect = (item) => {\r\n        setSelectedHome(item);\r\n        setSearchOptions([])\r\n    }\r\n\r\n    const onSearchChange = (event) => {\r\n        setSelectedHome(null);\r\n        const searchTerm = event.target.value.toLowerCase();\r\n        if (searchTerm.length >= 3) {\r\n            setSearchOptions(Destinations.filter(item => {\r\n                return item.city.toLowerCase().includes(searchTerm) || item.country.toLowerCase().includes(searchTerm)\r\n            }))\r\n        } else {\r\n            setSearchOptions([]);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Modal isOpen={props.show} onClose={() => ''}>\r\n            <ModalOverlay />\r\n            <ModalContent className=\"text-align-center\" p={8}>\r\n                <Image src={theme.logo} width=\"180px\" alt=\"\" className=\"center-using-margin\" />\r\n                <p className=\"medium-text\">WELCOME TRAVELER! LET'S GET STARTED.</p>\r\n                <br />\r\n                <p className=\"regular-text\">WHERE'S HOME?</p>\r\n                <Input\r\n                    key={selectedHome?.icao}\r\n                    defaultValue={selectedHome ? (selectedHome.city + ', ' + selectedHome.country) : ''}\r\n                    placeholder=\"Type a city\"\r\n                    type=\"text\"\r\n                    className=\"text-align-center\"\r\n                    mt={3}\r\n                    onChange={onSearchChange.bind(this)} />\r\n\r\n                {\r\n                    searchOptions.length > 0 ?\r\n                        <VStack\r\n                            divider={<StackDivider borderColor=\"gray.200\" />}\r\n                            spacing={0}\r\n                            align=\"stretch\"\r\n                            className=\"vertical-scroll search-options\">\r\n\r\n                            {searchOptions.map(item => {\r\n                                return <Box mt={2} mb={2} onClick={() => handleOptionSelect(item)}>\r\n                                    <p className=\"regular-text all-caps\"><b>{item.city}</b></p>\r\n                                    <p className=\"small-text all-caps\">{item.country}</p>\r\n                                </Box>\r\n                            })}\r\n\r\n                        </VStack> : null\r\n                }\r\n\r\n                <Button className={theme.button} mt={8} onClick={() => handleSubmit()}>Begin</Button>\r\n\r\n            </ModalContent>\r\n        </Modal >\r\n    )\r\n}\r\n\r\nexport default GetStartedModal;","export default __webpack_public_path__ + \"static/media/logo-full-aqua.c7bfa860.svg\";","export default __webpack_public_path__ + \"static/media/logo-full-sunset.c614165c.svg\";","export default __webpack_public_path__ + \"static/media/marker-maldives.bde5d980.svg\";","export default __webpack_public_path__ + \"static/media/marker-california.62e460ee.svg\";","export default __webpack_public_path__ + \"static/media/house.1618b123.svg\";","import React, { useState } from 'react';\r\nimport { useStore } from 'react-context-hook';\r\nimport { addToItinerary, getItinerary } from '../../utils/StorageManager.js';\r\n\r\nimport {\r\n    Modal,\r\n    ModalOverlay,\r\n    ModalContent,\r\n    ModalHeader,\r\n    ModalCloseButton,\r\n    ModalBody,\r\n    Input,\r\n    VStack,\r\n    StackDivider,\r\n    Box,\r\n    Button\r\n} from \"@chakra-ui/react\"\r\n\r\nimport Destinations from '../../data/airport_db.json';\r\n\r\nconst AddDestinationModal = (props) => {\r\n    const [theme] = useStore('theme');\r\n    const [itinerary, setItinerary] = useStore('itinerary');\r\n    const [selectedPlace, setSelectedPlace] = useState(null);\r\n    const [searchOptions, setSearchOptions] = useState([]);\r\n\r\n    const handleSubmit = () => {\r\n        if (selectedPlace !== null) {\r\n            addToItinerary(selectedPlace);\r\n            setItinerary(getItinerary());\r\n            setSearchOptions([]);\r\n            setSelectedPlace(null);\r\n            props.handleClose();\r\n        }\r\n    }\r\n\r\n    const handleOptionSelect = (item) => {\r\n        setSelectedPlace(item);\r\n        setSearchOptions([])\r\n    }\r\n\r\n    const onSearchChange = (event) => {\r\n        setSelectedPlace(null);\r\n        const searchTerm = event.target.value.toLowerCase();\r\n        if (searchTerm.length >= 3) {\r\n            setSearchOptions(Destinations.filter(item => {\r\n                return item.city.toLowerCase().includes(searchTerm) || item.country.toLowerCase().includes(searchTerm)\r\n            }))\r\n        } else {\r\n            setSearchOptions([]);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Modal isOpen={props.show} onClose={() => props.handleClose()}>\r\n            <ModalOverlay />\r\n            <ModalContent>\r\n                <ModalHeader className=\"subhead-text all-caps\">Add a Destination</ModalHeader>\r\n                <ModalCloseButton />\r\n                <ModalBody>\r\n                    <Input\r\n                        key={selectedPlace?.icao}\r\n                        defaultValue={selectedPlace ? (selectedPlace.city + ', ' + selectedPlace.country) : ''}\r\n                        placeholder=\"Type a city\"\r\n                        type=\"text\"\r\n                        className=\"text-align-center\"\r\n                        mt={3}\r\n                        onChange={onSearchChange.bind(this)} />\r\n                    {\r\n                        searchOptions.length > 0 ?\r\n                            <VStack\r\n                                divider={<StackDivider borderColor=\"gray.200\" />}\r\n                                spacing={0}\r\n                                align=\"stretch\"\r\n                                className=\"vertical-scroll search-options text-align-center\">\r\n\r\n                                {searchOptions.map(item => {\r\n                                    return <Box mt={2} mb={2} onClick={() => handleOptionSelect(item)}>\r\n                                        <p className=\"regular-text all-caps\"><b>{item.city}</b></p>\r\n                                        <p className=\"small-text all-caps\">{item.country}</p>\r\n                                    </Box>\r\n                                })}\r\n\r\n                            </VStack> : null\r\n                    }\r\n                </ModalBody>\r\n                <Button className={theme.button} onClick={() => handleSubmit()} m={5}>Submit</Button>\r\n            </ModalContent>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default AddDestinationModal;","import React from 'react';\r\nimport { useStore } from 'react-context-hook';\r\n\r\nimport {\r\n    Modal,\r\n    ModalOverlay,\r\n    ModalContent,\r\n    ModalHeader,\r\n    ModalCloseButton,\r\n    ModalBody,\r\n    FormControl,\r\n    FormLabel,\r\n    Select\r\n} from \"@chakra-ui/react\"\r\n\r\nimport { setTheme as setThemeStorage } from '../../utils/StorageManager';\r\nimport Themes from '../../theme/Theme';\r\n\r\nconst SettingsModal = (props) => {\r\n    const [theme, setTheme] = useStore('theme');\r\n\r\n    const handleThemeChange = (event) => {\r\n        const newTheme = Themes[event.target.value];\r\n        setTheme(newTheme);\r\n        setThemeStorage(newTheme);\r\n    }\r\n\r\n    const getThemeOptions = () => {\r\n        return Object.keys(Themes).map(key => {\r\n            const item = Themes[key];\r\n            return <option key={item.id} value={item.id} className=\"regular-text\">\r\n                {item.label}\r\n            </option>\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Modal isOpen={props.show} onClose={() => props.handleClose()}>\r\n            <ModalOverlay />\r\n            <ModalContent>\r\n                <ModalHeader className=\"subhead-text all-caps\">Settings</ModalHeader>\r\n                <ModalCloseButton />\r\n                <ModalBody>\r\n                    <FormControl id=\"theme\" mb={4}>\r\n                        <FormLabel className=\"regular-text all-caps\"><b>Theme</b></FormLabel>\r\n                        <Select\r\n                            defaultValue={theme.id}\r\n                            className=\"regular-text\"\r\n                            onChange={handleThemeChange.bind(this)}>\r\n                            {getThemeOptions()}\r\n                        </Select>\r\n                    </FormControl>\r\n                </ModalBody>\r\n            </ModalContent>\r\n        </Modal>\r\n    )\r\n};\r\n\r\nexport default SettingsModal;","import React from 'react';\r\nimport { useStore } from 'react-context-hook';\r\n\r\nimport {\r\n    Modal,\r\n    ModalOverlay,\r\n    ModalContent,\r\n    ModalHeader,\r\n    ModalCloseButton,\r\n    Image,\r\n    ModalBody,\r\n    Box\r\n} from \"@chakra-ui/react\"\r\n\r\nconst AboutModal = (props) => {\r\n    const [theme] = useStore('theme');\r\n\r\n    return (\r\n        <Modal isOpen={props.show} onClose={() => props.handleClose()}>\r\n            <ModalOverlay />\r\n            <ModalContent h=\"80vh\">\r\n                <ModalHeader className=\"subhead-text all-caps\">About</ModalHeader>\r\n                <ModalCloseButton />\r\n                <ModalBody className=\"vertical-scroll\">\r\n                    <Image src={theme.logo} width=\"180px\" alt=\"\" mb={4} className=\"center-using-margin\" />\r\n                    <p className=\"regular-text text-align-center\">Made with <span title=\"All you need is love! - The Beatles\">❤️</span> by <a href=\"https://rishabh.blog\" target=\"_blank\" rel=\"noreferrer\"><b><u>Rishabh Tatiraju</u></b></a></p>\r\n                    <Box mt={6} mb={6}>\r\n                        <p className=\"regular-text text-align-justify\">Voyager is a travel itinerary visualizer. Simply set your home city and start adding destinations to see them on a beautifully crafted map - a way to remember all your travels!</p>\r\n                    </Box>\r\n                    <p className=\"regular-text text-align-center all-caps\"><b>Credits</b></p>\r\n                    <Box mt={2} mb={6}>\r\n                        <p className=\"small-text text-align-justify\"><i><b>Anushka Ramteke</b></i>, for the endless travel talks and our collective love to travel that inspired me to make this! She's also the person to credit for the color schemes used here.\r\n<br /><br /><i><b>Akash Joshi</b></i>, for inardavently introducing me to React. His React articles have been a lot of help too!\r\n<br /><br /><i><b>My beloved late father</b></i>, for gifting me an atlas when I was 6 years old, something that led me to develop an obsession towards geography and cartography.</p>\r\n                    </Box>\r\n                    <p className=\"regular-text text-align-center all-caps\"><b>Support this tool</b></p>\r\n                    <Box mt={2} mb={6}>\r\n                        <p className=\"small-text text-align-justify\">Voyager is a free and open-source web app. I do not intend to make any money out of it as it was built with pure passion and for self happiness, but any generosity in the form of monetary donations is welcome. To support me and this project, you can PayPal your donations to user <i>tatiraju.rishabh@gmail.com</i>.</p>\r\n                    </Box>\r\n                    <p className=\"regular-text text-align-center all-caps\"><b>Homage</b></p>\r\n                    <Box mt={2}>\r\n                        <p className=\"small-text text-align-justify\">Although this tool is in no way related to space exploration, it is named after <i>Voyager 1</i>, the cosmic traveler.</p>\r\n                    </Box>\r\n                    <Image alt=\"\" mt={4} mb={4} className=\"center-using-margin\" src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/6/60/Voyager_spacecraft_model.png/320px-Voyager_spacecraft_model.png\" width=\"300px\" />\r\n                    <Box mb={4}>\r\n                        <p className=\"small-text text-align-justify\">Voyager 1 is the farthest man-made object from Earth. The spacecraft, now more than 22 billion km (14 billion miles) away from us, is slated to wander the vast darkness of space for eternity.\r\n                        <br /><br />By 2025, its radioisotope thermoelectric generators (RTGs, a type of nuclear power generator) will no longer supply enough electric power for onboard instruments, and it will disappear from our sight forever. However, it carries a gold-plated audio-visual disc, should the spacecraft ever be found by intelligent life forms from other planetary systems.\r\n                        <br /><br />Quite indeed, it is boldly going where no one has ever gone before!🖖</p>\r\n                    </Box>\r\n                </ModalBody>\r\n            </ModalContent>\r\n        </Modal>\r\n    )\r\n};\r\n\r\nexport default AboutModal;","import { useState } from 'react';\nimport { withStore } from 'react-context-hook';\n\nimport './App.css';\n\nimport Itinerary from './components/Itinerary';\nimport Map from './components/Map';\nimport Toolbar from './components/Toolbar';\nimport GetStartedModal from './components/modals/GetStarted';\n\nimport { getItinerary, getTheme, getHome } from './utils/StorageManager';\nimport { isMobile } from './utils/Utils';\nimport { getThemeById } from './theme/Theme';\n\nimport { ChakraProvider, Drawer, Grid, GridItem, DrawerOverlay, Box } from \"@chakra-ui/react\"\nimport AddDestinationModal from './components/modals/AddDestination';\nimport SettingsModal from './components/modals/Settings';\nimport AboutModal from './components/modals/About';\n\nconst App = () => {\n  const [openDrawer, setOpenDrawer] = useState(false);\n  const [showGetStarted, setShowGetStarted] = useState(getHome() === null || getHome() === undefined);\n  const [showAddModal, setShowAddModal] = useState(false);\n  const [showSettingsModal, setShowSettingsModal] = useState(false);\n  const [showAboutModal, setShowAboutModal] = useState(false);\n\n  const handleGetStartedClose = () => {\n    setShowGetStarted(false);\n  }\n\n  const handleDestinationAdded = () => {\n    setShowAddModal(false);\n  }\n\n  const handleSettingsClose = () => {\n    setShowSettingsModal(false);\n  }\n\n  const handleAboutClose = () => {\n    setShowAboutModal(false);\n  }\n\n  return (\n    <ChakraProvider>\n      <div className=\"App\">\n        {getHome() === null ? <GetStartedModal show={showGetStarted} handleClose={handleGetStartedClose} /> : null}\n\n        <AddDestinationModal show={showAddModal} handleClose={handleDestinationAdded} />\n\n        <SettingsModal show={showSettingsModal} handleClose={handleSettingsClose} />\n\n        <AboutModal show={showAboutModal} handleClose={handleAboutClose} />\n\n        <Grid\n          h=\"100vh\"\n          w=\"100vw\"\n          templateColumns=\"repeat(12, 1fr)\"\n          gap={0}\n        >\n          <GridItem colSpan={{ base: 12, sm: 12, md: 8, lg: 9 }} h=\"100vh\">\n            <div className=\"fit-container relative-container\">\n              <Map className=\"fit-container absolute-top z-base\" />\n              <Toolbar\n                className=\"fit-width absolute-top z-top fade-top\"\n                drawerOpen={setOpenDrawer}\n                showAddModal={setShowAddModal}\n                showAboutModal={setShowAboutModal}\n                showSettingsModal={setShowSettingsModal} />\n              <Box p={4} className=\"absolute-bottom z-top\">\n                <p className=\"small-text all-caps \"><small>Paths do not depict actual flight routes.</small></p>\n              </Box>\n            </div>\n          </GridItem>\n          <GridItem colSpan={{ base: 0, sm: 0, md: 4, lg: 3 }} h=\"100vh\">\n            <Itinerary className=\"fit-container\"\n              showAddModal={setShowAddModal} />\n          </GridItem>\n        </Grid>\n        {\n          isMobile ?\n            <Drawer\n              isOpen={openDrawer}\n              placement=\"right\">\n              <DrawerOverlay\n                pl={20}>\n                <Itinerary className=\"fit-container\" drawer closeDrawer={setOpenDrawer} />\n              </DrawerOverlay>\n            </Drawer> : null\n        }\n      </div>\n    </ChakraProvider>\n  );\n}\n\nconst globalState = {\n  theme: getThemeById(getTheme()),\n  itinerary: getItinerary(),\n  home: getHome(),\n  selectedDestination: null\n};\nexport default withStore(App, globalState);","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}